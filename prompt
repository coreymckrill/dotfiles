# !/bin/bash

# Colors
# http://it.toolbox.com/blogs/lim/how-to-fix-colors-on-mac-osx-terminal-37214
# http://geoff.greer.fm/lscolors/
export CLICOLOR=1
export LSCOLORS=exfxcxdxbxegedabagacad

color_reset="\033[m"
color_branch="\033[0;35m"      # purple
color_dirty="\033[1;31m"       # red
color_clean="\033[0;34m"       # blue
color_folder="\033[0;32m"      # green
color_user="\033[0;36m"        # cyan
color_user_host="\e[38;5;166m" # orange

# Includes
[[ -s $DOTFILES_DIR/lib/git-prompt.sh ]] && source $DOTFILES_DIR/lib/git-prompt.sh

# Git prompt settings
#
# See lib/git-prompt.sh
GIT_PS1_SHOWDIRTYSTATE=true
GIT_PS1_SHOWSTASHSTATE=true
GIT_PS1_SHOWUPSTREAM="auto"
GIT_PS1_SHOWCOLORHINTS=true
GIT_PS1_HIDE_IF_PWD_IGNORED=true

# Determine SVN status of current location
#
# See https://github.com/iandunn/dotfiles/blob/a45ac99d07edeb5394cba6ea863508b4fee53592/.bash_prompt
#
# Uses svn-stat-pruned alias
function svn_status {
	local SVN_INFO=$(svn info 2> /dev/null)
	local branch
	local state

	if [[ -z $SVN_INFO ]]; then
		exit
	fi

	# Get the current branch.
	branch=$(echo "$SVN_INFO" | grep '^URL:' | egrep -o '(tags|branches)/[^/]+|trunk' | egrep -o '[^/]+$')
	if [[ -z $branch ]]; then
		branch="trunk"
	fi
	branch="${color_branch}${branch}${color_reset}"

	# Look for changes.
	if [ ! -z "$(svn-stat-pruned)" ]; then
		state="${color_dirty}dirty${color_reset}"
	else
		state="${color_clean}clean${color_reset}"
	fi

	echo -n "SVN: [$branch is $state]"
}

# Generate SVN info to include in the prompt
function svn_prompt {
	SVN_PROMPT=$(svn_status)

	if [[ -n $SVN_PROMPT ]]; then
		echo "\n$SVN_PROMPT"
	fi

	echo ""
}

# Teh prompt
export PROMPT_COMMAND='__git_ps1 "\n${color_folder}\w${color_reset}" \
	"$(svn_prompt)\n${color_user}\u${color_reset}@${color_user_host}\H${color_reset} > " \
	"\nGit: [%s]"'
